AWSTemplateFormatVersion: "2010-09-09"
Description: "CodeBuild with IAM"

Parameters:
  CustomParameter001:
    Type: "String"
    Default: "custom001"

Resources:
  #-------------------------
  # Logs::LogGroup
  #-------------------------
  LogGroupCodebuild:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Sub "/aws/codebuild/codebuild-${CustomParameter001}"
      RetentionInDays: 30

  #-------------------------
  # IAM::Role
  #-------------------------
  IAMRoleCodebuild:
    Type: "AWS::IAM::Role"
    Properties:
      Path: "/"
      RoleName: !Sub "role-${CustomParameter001}-codebuild"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "codebuild.amazonaws.com"
            Action: "sts:AssumeRole"
      MaxSessionDuration: 3600
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/CloudWatchEventsFullAccess"
        - "arn:aws:iam::aws:policy/CloudWatchFullAccess"
        - "arn:aws:iam::aws:policy/CloudWatchFullAccessV2"

  #-------------------------
  # IAM::Policy
  #-------------------------
  InlinePolicyCodebuild:
    Type: "AWS::IAM::Policy"
    DependsOn:
     - IAMRoleCodebuild
    Properties:
      PolicyName: "policy-s3-access"
      Roles:
        - Ref: IAMRoleCodebuild
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "s3:GetObject"
            Resource: 
              - !Sub "arn:aws:s3:::s3-${CustomParameter001}-codepipeline"
              - !Sub "arn:aws:s3:::s3-${CustomParameter001}-codepipeline/*"

  #-------------------------
  # CodeBuild::Project
  #-------------------------
  CodeBuildProject:
    Type: "AWS::CodeBuild::Project"
    DependsOn:
     - IAMRoleCodebuild
     - InlinePolicyCodebuild
    Properties:
      Name: !Sub "codebuild-${CustomParameter001}"
      Source: 
        BuildSpec: |
          version: 0.2
          phases:
            install:
              commands:
                - echo installs phase
                - npm install -g cowsay
            build:
              commands:
                - echo build phase
                - cowsay $CowsayLine
        InsecureSsl: false
        Type: "CODEPIPELINE"
      Artifacts: 
        EncryptionDisabled: false
        Name: !Sub "codebuild-${CustomParameter001}"
        Packaging: "NONE"
        Type: "CODEPIPELINE"
      Cache: 
        Type: "NO_CACHE"
      Environment: 
        ComputeType: "BUILD_GENERAL1_SMALL"
        Image: "aws/codebuild/amazonlinux2-x86_64-standard:5.0"
        ImagePullCredentialsType: "CODEBUILD"
        PrivilegedMode: false
        Type: "LINUX_CONTAINER"
        EnvironmentVariables:
          - Name: "CowsayLine"
            Type: "PLAINTEXT"
            Value: "Hello world!"
      ServiceRole: !Ref IAMRoleCodebuild
      TimeoutInMinutes: 60
      QueuedTimeoutInMinutes: 480
      EncryptionKey: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3"
      BadgeEnabled: false
      LogsConfig: 
        CloudWatchLogs: 
          Status: "ENABLED"
      Visibility: "PRIVATE"

Outputs:
  CodeBuildProject:
    Value: !Ref CodeBuildProject
    Export:
      Name: !Sub "codebuild-${CustomParameter001}"
  CodeBuildProjectArn:
    Value: !GetAtt CodeBuildProject.Arn
    Export:
      Name: !Sub "codebuild-${CustomParameter001}-arn"
